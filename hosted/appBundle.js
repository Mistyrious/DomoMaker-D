(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("domoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,o)=>{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),s=await r.json();document.getElementById("domoMessage").classList.add("hidden"),s.error&&t(s.error),s.redirect&&(window.location=s.redirect),o&&o(s)},hideError:()=>{document.getElementById("domoMessage").classList.add("hidden")}}}},t={};function a(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,a),s.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#domoName").value,o=t.target.querySelector("#domoAge").value,r=t.target.querySelector("#domoLevel").value,s=t.target.querySelector("#_csrf").value;return a&&o&&r?(e.sendPost(t.target.action,{name:a,age:o,level:r,_csrf:s},c),!1):(e.handleError("All fields are required!"),!1)},o=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#oldPass").value,o=t.target.querySelector("#pass").value,r=t.target.querySelector("#pass2").value,s=t.target.querySelector("#_csrf").value;if(!a||!o||!r)return e.handleError("All fields are required!"),o;o!==r&&e.handleError("New passwords do not match!"),e.sendPost(t.target.action,{oldPass:a,pass:o,pass2:r,_csrf:s})},r=e=>React.createElement("form",{id:"changePassForm",onSubmit:o,name:"changePassForm",action:"/changePass",method:"POST",className:"passForm"},React.createElement("label",{htmlFor:"oldPass"},"Current Password: "),React.createElement("input",{id:"oldPass",type:"password",name:"oldPass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass"},"New Password: "),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass2"},"Confirm New Password: "),React.createElement("input",{id:"pass2",type:"password",name:"pass2",placeholder:"password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeDomoSubmit",type:"submit",value:"Update"})),s=e=>React.createElement("form",{id:"domoForm",onSubmit:t,name:"domoForm",action:"/maker",method:"POST",className:"domoForm"},React.createElement("label",{htmlFor:"name"},"Name: "),React.createElement("input",{id:"domoName",type:"text",name:"name",placeholder:"Domo Name"}),React.createElement("label",{htmlFor:"age"},"Age: "),React.createElement("input",{id:"domoAge",type:"number",min:"0",name:"age"}),React.createElement("label",{htmlFor:"level"},"Level: "),React.createElement("input",{id:"domoLevel",type:"number",min:"0",max:"100",name:"level"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeDomoSubmit",type:"submit",value:"Make Domo"})),m=e=>{if(0===e.domos.length)return React.createElement("div",{className:"domoList"},React.createElement("h3",{className:"emptyDomo"},"No Domos Yet!"));const t=e.domos.map((e=>React.createElement("div",{key:e._id,className:"domo"},React.createElement("img",{src:"/assets/img/domoface.jpeg",alt:"domo face",className:"domoFace"}),React.createElement("h3",{className:"domoName"},"Name: ",e.name),React.createElement("h3",{className:"domoAge"},"Age: ",e.age),React.createElement("h3",{className:"domoLevel"},"Level: ",e.level))));return React.createElement("div",{className:"domoList"},t)},c=async()=>{const e=await fetch("/getDomos"),t=await e.json();ReactDOM.render(React.createElement(m,{domos:t.domos}),document.getElementById("domos"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(s,{csrf:t.csrfToken}),document.getElementById("makeDomo")),ReactDOM.render(React.createElement(r,{csrf:t.csrfToken}),document.getElementById("changePass")),ReactDOM.render(React.createElement(m,{domos:[]}),document.getElementById("domos")),c()}})()})();